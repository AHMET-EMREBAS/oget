var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,2.05]],["body/coverage.html",[0,0.92,1,1.259,2,1.259,3,1.07,4,1.259,5,1.259,6,1.201,7,2.643,8,0.92,9,3.136,10,0.09,11,3.136,12,0.92,13,1.934,14,0.92,15,0.92,16,1.259,17,0.696,18,1.413,19,0.92,20,0.696,21,1.259,22,1.259,23,1.259,24,0.052,25,0.052]],["title/dependencies.html",[26,1.319,27,1.841]],["body/dependencies.html",[10,0.095,24,0.082,25,0.082,27,1.741,28,2.382,29,2.382,30,2.382,31,2.382]],["title/miscellaneous/functions.html",[32,0.41,33,1.841]],["body/miscellaneous/functions.html",[3,1.379,6,0.475,8,1.298,10,0.084,12,1.298,17,1.216,18,0.825,19,1.298,20,0.983,24,0.048,25,0.048,32,0.256,33,0.825,34,0.475,35,1.777,36,0.983,37,1.128,38,3.211,39,1.777,40,2.492,41,2.492,42,2.492,43,1.298,44,1.128,45,1.777,46,1.128,47,1.777,48,1.128]],["title/index.html",[34,0.76,49,1.805,50,1.805]],["body/index.html",[10,0.068,20,1.608,24,0.068,25,0.068,51,2.523,52,1.808,53,2.906,54,1.808,55,2.523,56,2.523,57,1.808,58,2.523,59,2.523,60,1.808,61,1.808,62,1.808,63,1.808]],["title/modules.html",[64,2.05]],["body/modules.html",[10,0.089,24,0.089,25,0.089,64,1.976]],["title/overview.html",[65,2.05]],["body/overview.html",[10,0.089,24,0.089,25,0.089,65,1.976]],["title/properties.html",[26,1.319,66,1.841]],["body/properties.html",[10,0.093,24,0.085,25,0.085,66,1.851,67,2.533,68,2.533]],["title/miscellaneous/typealiases.html",[32,0.41,69,2.52]],["body/miscellaneous/typealiases.html",[3,1.617,6,0.946,10,0.079,17,1.617,24,0.079,25,0.079,32,0.511,34,0.946,36,1.244,70,2.248,71,2.248]],["title/miscellaneous/variables.html",[32,0.41,72,1.841]],["body/miscellaneous/variables.html",[6,0.823,10,0.088,14,1.946,15,1.946,24,0.072,25,0.072,32,0.444,34,0.823,36,1.474,43,1.946,72,1.429,73,2.663,74,1.955,75,1.955]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":68,"title":{},"body":{"properties.html":{}}}],["0/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["2.3.0",{"_index":31,"title":{},"body":{"dependencies.html":{}}}],["5.1.1",{"_index":29,"title":{},"body":{"dependencies.html":{}}}],["alias",{"_index":16,"title":{},"body":{"coverage.html":{}}}],["aliases",{"_index":70,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["bcrypt",{"_index":28,"title":{},"body":{"dependencies.html":{}}}],["build",{"_index":56,"title":{},"body":{"index.html":{}}}],["building",{"_index":54,"title":{},"body":{"index.html":{}}}],["compare",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["compare(value",{"_index":37,"title":{},"body":{"miscellaneous/functions.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["decrypt",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["decrypt(text",{"_index":46,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":73,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":27,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{}}}],["encrypt",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["encrypt(text",{"_index":48,"title":{},"body":{"miscellaneous/functions.html":{}}}],["encrypteddata",{"_index":17,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["execute",{"_index":61,"title":{},"body":{"index.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":33,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generated",{"_index":52,"title":{},"body":{"index.html":{}}}],["getting",{"_index":49,"title":{"index.html":{}},"body":{}}],["hash",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["hash(value",{"_index":44,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashedvalue",{"_index":39,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["index",{"_index":34,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["iv",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["library",{"_index":51,"title":{},"body":{"index.html":{}}}],["literal",{"_index":71,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["matching",{"_index":25,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":32,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["modules",{"_index":64,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":41,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":21,"title":{},"body":{"coverage.html":{}}}],["nx",{"_index":53,"title":{},"body":{"index.html":{}}}],["optional",{"_index":42,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":65,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":26,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":40,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":66,"title":{"properties.html":{}},"body":{"properties.html":{}}}],["randombytes(16",{"_index":74,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randombytes(32",{"_index":75,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":24,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":45,"title":{},"body":{"miscellaneous/functions.html":{}}}],["run",{"_index":55,"title":{},"body":{"index.html":{}}}],["running",{"_index":57,"title":{},"body":{"index.html":{}}}],["src/.../encrypt.ts",{"_index":36,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../hash.ts",{"_index":35,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/lib/encrypt.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/lib/hash.ts",{"_index":18,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["started",{"_index":50,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["string",{"_index":38,"title":{},"body":{"miscellaneous/functions.html":{}}}],["table",{"_index":23,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":22,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":60,"title":{},"body":{"index.html":{}}}],["tests",{"_index":59,"title":{},"body":{"index.html":{}}}],["text",{"_index":47,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tslib",{"_index":30,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":69,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["unit",{"_index":58,"title":{},"body":{"index.html":{}}}],["value",{"_index":43,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":13,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":72,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":67,"title":{},"body":{"properties.html":{}}}],["via",{"_index":62,"title":{},"body":{"index.html":{}}}],["vitest",{"_index":63,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            function\n            decrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            function\n            encrypt\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            variable\n            iv\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            variable\n            key\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/encrypt.ts\n            \n            type alias\n            EncryptedData\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/hash.ts\n            \n            function\n            compare\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/lib/hash.ts\n            \n            function\n            hash\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            bcrypt : ^5.1.1\n        \n            tslib : ^2.3.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            compare   (src/.../hash.ts)\n                        \n                        \n                            decrypt   (src/.../encrypt.ts)\n                        \n                        \n                            encrypt   (src/.../encrypt.ts)\n                        \n                        \n                            hash   (src/.../hash.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/hash.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        compare\n                        \n                    \n                \n            \n            \n                \ncompare(value: string, hashedValue: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                hashedValue\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        hash\n                        \n                    \n                \n            \n            \n                \nhash(value: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    src/lib/encrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        decrypt\n                        \n                    \n                \n            \n            \n                \ndecrypt(text: EncryptedData)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            EncryptedData\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        encrypt\n                        \n                    \n                \n            \n            \n                \nencrypt(text: string)\n                \n            \n\n\n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                text\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         EncryptedData\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nhash\nThis library was generated with Nx.\nBuilding\nRun nx build hash to build the library.\nRunning unit tests\nRun nx test hash to execute the unit tests via Vitest.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            EncryptedData   (src/.../encrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/encrypt.ts\n    \n    \n        \n            \n                \n                    \n                    EncryptedData\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            iv   (src/.../encrypt.ts)\n                        \n                        \n                            key   (src/.../encrypt.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/lib/encrypt.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        iv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : randomBytes(16)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Default value : randomBytes(32)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
